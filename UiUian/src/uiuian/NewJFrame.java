/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uiuian;

import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import uiuian.UiUian.Jadwal;
import uiuian.UiUian.Ruangan;

/**
 *
 * @author Ratna Dira
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "07.00", "08.00", "09.00", "10.00", "11.00", "12.00", "13.00", "14.00", "15.00", "16.00", "17.00"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setRowHeight(50);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("cek");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Conflict:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            List<Ruangan> ruang = new ArrayList<Ruangan>();
            List<Jadwal> jadwal = new ArrayList<Jadwal>();
            JFileChooser fad = new JFileChooser();
            File input;
            int rent = fad.showOpenDialog(fad);
            input = fad.getSelectedFile();
            Scanner in = new Scanner(input);
            String nextLine = in.nextLine();
            String[] tes;
            Ruangan B = new Ruangan();
            nextLine = in.nextLine();
            while(!nextLine.equals("")) {
                tes = nextLine.split(";");
                B.Nama=tes[0];
                B.JamMulai=tes[1];
                B.JamSelesai=tes[2];
                B.Hari=tes[3];
                ruang.add(B);
                //csvOutput1.write(nextLine);
                //csvOutput1.endRecord();
                nextLine = in.nextLine();
                B = new Ruangan();
            }
            nextLine = in.nextLine();
            Jadwal A = new Jadwal();
            while(in.hasNext()) {
                nextLine = in.nextLine();
                tes = nextLine.split(";");
                A.NamaKegiatan=tes[0];
                A.Ruangan=tes[1];
                A.JamMulai=tes[2];
                A.JamSelesai=tes[3];
                A.Durasi=tes[4];
                A.Hari=tes[5];
                jadwal.add(A);
                A = new Jadwal();
                //csvOutput2.write(nextLine);
                //csvOutput2.endRecord();
            }
            in.close();
            String[][] semua = new String[5][11];
        //ArrayList<ArrayList<ArrayList<String>>> listOLists = new ArrayList<ArrayList<ArrayList<String>>>();
        //ArrayList<String> singleList = new ArrayList<String>(); //buat jam
        
        
        int tess=0;
        int jam=0,jamakhir=0;
        while (tess<ruang.size()){
            if (ruang.get(tess).Hari.contains("1")){
                jam=Integer.valueOf(ruang.get(tess).JamMulai.substring(0, 2));
                jamakhir=Integer.valueOf(ruang.get(tess).JamSelesai.substring(0, 2));
                while (jam<=jamakhir){
                    if (semua[0][jam-7] == null){
                         semua[0][jam-7]=ruang.get(tess).Nama+"-,";
                    } else
                        semua[0][jam-7]=semua[0][jam-7]+ruang.get(tess).Nama+"-,";
                    System.out.println(semua[0][jam-7]);
                    jam++;
                }
                jam=0;
                jamakhir=0;
            }
            if (ruang.get(tess).Hari.contains("2")){
                jam=Integer.valueOf(ruang.get(tess).JamMulai.substring(0, 2));
                jamakhir=Integer.valueOf(ruang.get(tess).JamSelesai.substring(0, 2));
                while (jam<=jamakhir){
                    if (semua[1][jam-7] == null){
                         semua[1][jam-7]=ruang.get(tess).Nama+"-,";
                    } else
                    semua[1][jam-7]=semua[1][jam-7]+ruang.get(tess).Nama+"-,";
                    jam++;
                }
                jam=0;
                jamakhir=0;
            }
            if (ruang.get(tess).Hari.contains("3")){
                jam=Integer.valueOf(ruang.get(tess).JamMulai.substring(0, 2));
                jamakhir=Integer.valueOf(ruang.get(tess).JamSelesai.substring(0, 2));
                while (jam<=jamakhir){
                    if (semua[2][jam-7] == null){
                         semua[2][jam-7]=ruang.get(tess).Nama+"-,";
                    } else
                    semua[2][jam-7]=semua[2][jam-7]+ruang.get(tess).Nama+"-,";
                    jam++;
                    
                }
                jam=0;
                jamakhir=0;
            }
            if (ruang.get(tess).Hari.contains("4")){
                jam=Integer.valueOf(ruang.get(tess).JamMulai.substring(0, 2));
                jamakhir=Integer.valueOf(ruang.get(tess).JamSelesai.substring(0, 2));
                while (jam<=jamakhir){
                    if (semua[3][jam-7] == null){
                         semua[3][jam-7]=ruang.get(tess).Nama+"-,";
                    } else
                    semua[3][jam-7]=semua[3][jam-7]+ruang.get(tess).Nama+"-,";
                    
                    jam++;
                }
                jam=0;
                jamakhir=0;
            }
            if (ruang.get(tess).Hari.contains("5")){
                jam=Integer.valueOf(ruang.get(tess).JamMulai.substring(0, 2));
                jamakhir=Integer.valueOf(ruang.get(tess).JamSelesai.substring(0, 2));
                while (jam<=jamakhir){
                    if (semua[4][jam-7] == null){
                         semua[4][jam-7]=ruang.get(tess).Nama+"-,";
                    } else {
                    semua[4][jam-7]=semua[4][jam-7]+ruang.get(tess).Nama+"-,";
                   
                    }
                    jam++;
                }
                jam=0;
                jamakhir=0;
            }
            tess++;
        }
        tess=0;
        int cobas=0;
        tess=0;
        int benar=0,count=0;
        while(tess<jadwal.size()){
            String[] simpan=jadwal.get(tess).Hari.split(",");
            benar=0;
            count=0;
            int top=Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2))-7;
            System.out.println(jadwal.get(tess).NamaKegiatan);
            while (benar==0 && count<30){
                top=Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2))-7;
                int idx = new Random().nextInt(simpan.length);
                String random = (simpan[idx]);
                System.out.print(Integer.valueOf(random) +"++");
                System.out.print((Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2))-7)+"====");
                while (top<=((Integer.valueOf(jadwal.get(tess).JamSelesai.substring(0, 2))-7))-Integer.valueOf(jadwal.get(tess).Durasi) && semua[Integer.valueOf(random)-1][top+Integer.valueOf(jadwal.get(tess).Durasi)]!=null && benar==0) {
                if (semua[Integer.valueOf(random)-1][(Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2)))-7]!=null) {
                System.out.println(semua[Integer.valueOf(random)-1][(Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2)))-7]);
                boolean masukan=semua[Integer.valueOf(random)-1][top].contains("-,");
                 int cek=semua[Integer.valueOf(random)-1][top].lastIndexOf("-,");
                if (cek!=-1 && ("-".equals(jadwal.get(tess).Ruangan))){
                    int tambah=top;
                    
                   
                    System.out.println(cek);
                    String ubah=semua[Integer.valueOf(random)-1][top].substring(0, cek);
                    String[] pas=ubah.split(",");
                    String masuk=pas[pas.length-1];
                    System.out.println("!!!!!"+masuk);
                    while (tambah<(Integer.valueOf(jadwal.get(tess).Durasi)+top)) {
                        if (semua[Integer.valueOf(random)-1][tambah]!=null) {
                            if (semua[Integer.valueOf(random)-1][tambah].contains("-,")){
                    semua[Integer.valueOf(random)-1][tambah]=semua[Integer.valueOf(random)-1][tambah].replaceFirst(masuk+"-,", (masuk+"-"+jadwal.get(tess).NamaKegiatan+"-=,"));
                            } else semua[Integer.valueOf(random)-1][tambah]=semua[Integer.valueOf(random)-1][tambah].replaceFirst(masuk+"-", (masuk+"-"+jadwal.get(tess).NamaKegiatan+"-="));
                    
                    System.out.println("INTERUPSI"+semua[Integer.valueOf(random)-1][tambah]);
                        } else semua[Integer.valueOf(random)-1][tambah]=jadwal.get(tess).NamaKegiatan;
                    tambah++;
                    }
                    if (semua[Integer.valueOf(random)-1][tambah-1].contains(jadwal.get(tess).NamaKegiatan)){
                    benar=1;
                    }
                } else 
                    if (semua[Integer.valueOf(random)-1][Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2))-7].contains((jadwal.get(tess).Ruangan)+"-,")) {
                     int tambah=top;
                    while (tambah<(Integer.valueOf(jadwal.get(tess).Durasi)+top)) {
                        if (semua[Integer.valueOf(random)-1][tambah]!=null) {
                            if (semua[Integer.valueOf(random)-1][tambah].contains("-,")){
                     semua[Integer.valueOf(random)-1][tambah]=semua[Integer.valueOf(random)-1][tambah].replaceFirst((jadwal.get(tess).Ruangan+"-,"), (jadwal.get(tess).Ruangan+"-"+jadwal.get(tess).NamaKegiatan+"-=,"));
                            } else  semua[Integer.valueOf(random)-1][tambah]=semua[Integer.valueOf(random)-1][tambah].replaceFirst((jadwal.get(tess).Ruangan+"-"), (jadwal.get(tess).Ruangan+"-"+jadwal.get(tess).NamaKegiatan+"-="));
                    
                   
                    System.out.println("INTERUPSI1"+semua[Integer.valueOf(random)-1][tambah]);
                        } else semua[Integer.valueOf(random)][tambah]=jadwal.get(tess).NamaKegiatan;
                    tambah++;
                    }
                    if (semua[Integer.valueOf(random)-1][tambah-1].contains(jadwal.get(tess).NamaKegiatan)){
                    benar=1;
                    }
                
                }
                }
                top++;
                }
                count++;
                
            }
            System.out.println("GANTI");
            top=Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2))-7;
            if (benar==0){
                while (benar==0 ){
                    top=Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2))-7;
                int idx = new Random().nextInt(simpan.length);
                String random = (simpan[idx]);
                System.out.println(random);
                System.out.println(semua[Integer.valueOf(random)-1][Integer.valueOf(jadwal.get(tess).JamMulai.substring(0, 2))-7]);
                System.out.println((jadwal.get(tess).Ruangan));
                System.out.println(jadwal.get(tess).NamaKegiatan);
                while (top<=((Integer.valueOf(jadwal.get(tess).JamSelesai.substring(0, 2))-7))-Integer.valueOf(jadwal.get(tess).Durasi)&& semua[Integer.valueOf(random)-1][top+Integer.valueOf(jadwal.get(tess).Durasi)]!=null&&benar==0) {
                if (( "-".equals(jadwal.get(tess).Ruangan))){
                    int tambah=top;
                    while (tambah<(Integer.valueOf(jadwal.get(tess).Durasi)+top)) {
                        semua[Integer.valueOf(random)-1][tambah] = semua[Integer.valueOf(random)-1][tambah].replaceFirst(",", ("-="+jadwal.get(tess).NamaKegiatan+","));
                    tambah++;
                    System.out.println("INTERUPSI1"+semua[Integer.valueOf(random)-1][tambah]);
                    }
                    System.out.println("LOOP0");
                    
                    benar=1;
                    
                } else if (semua[Integer.valueOf(random)-1][top].contains(jadwal.get(tess).Ruangan)){
                    int tambah=top;
                    
                    while (tambah<(Integer.valueOf(jadwal.get(tess).Durasi)+(top))) {
                    semua[Integer.valueOf(random)-1][tambah]=semua[Integer.valueOf(random)-1][tambah].replaceFirst((jadwal.get(tess).Ruangan+"-"), (jadwal.get(tess).Ruangan+"-"+jadwal.get(tess).NamaKegiatan+"-="));
                    tambah++;
                    System.out.println("LOOPPPP");
                    }
                    benar=1;
                }
               System.out.println("LOOP1"); 
            top++;
                }
                }
            }
            tess++;
        }
                tess=0;
        int conflict=0;
        int hitung=0;
        String[] pisah;
        String[] cekpisah;
        while (tess<5){
            cobas=0;
            while (cobas<11) {
                if (semua[tess][cobas]!=null){
                if (semua[tess][cobas].contains(",")){
                pisah=semua[tess][cobas].split(",");
                while (hitung<pisah.length){
                    if (pisah[hitung].contains("=")){
                    System.out.println(pisah[hitung]);
                    
                    cekpisah=pisah[hitung].split("=");
                    System.out.println(semua[tess][cobas]);
                   if (cekpisah.length!=1){
                       int hitungcon=cekpisah.length;
                       int k=1;
                       int total=0;
                       int v=0;
                       while (v<hitungcon){
                           if (jTable1.getValueAt(tess, cobas)!=null){
                               jTable1.getComponentAt(tess, cobas).setForeground(Color.red);
                           jTable1.setValueAt((jTable1.getValueAt(tess, cobas)+"/n"+cekpisah[v].substring(0,cekpisah[v].length()-1)), tess, cobas);
                           } else {
                               jTable1.getComponentAt(tess, cobas).setForeground(Color.red);
                               jTable1.setValueAt((cekpisah[v].substring(0,cekpisah[v].length()-1)), tess, cobas);
                                
                           
                           }
                           v++;
                       }
                       while(k<hitungcon){
                           total=total+k;
                           k++;
                       }
                       System.out.println(total);
                    conflict=conflict+total;
                   } else if (cekpisah.length==1) {
                       if (jTable1.getValueAt(tess, cobas)!=null){
                           jTable1.getComponentAt(tess, cobas).setForeground(Color.black);
                       jTable1.setValueAt((jTable1.getValueAt(tess, cobas)+"/n"+cekpisah[0].substring(0,cekpisah[0].length()-1)), tess, cobas);
                       
                       } else {
                       jTable1.setValueAt((cekpisah[0].substring(0,cekpisah[0].length()-1)), tess, cobas);
                        //jTable1.getComponentAt(tess, cobas).setForeground(Color.black);
             
                       }
                   }
                    cekpisah=null;
                    } else {
                       // jTable1.setValueAt(pisah[hitung], tess, cobas);
                    }
                    hitung++;
                }
                hitung=0;
                } else conflict++;
                 }
                cobas++;
            }
            pisah=null;
           
            tess++;
        }
        jLabel1.setText("Conflict :"+conflict);
       
        tess=0;
        cobas=0;
        
       
        
            
// TODO add your handling code here:
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
